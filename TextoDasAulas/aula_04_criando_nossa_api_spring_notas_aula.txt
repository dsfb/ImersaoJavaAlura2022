
Aula 04 - Criando nossa pr√≥pria API com Spring


Links, dicas e notas de aula

Boas-vindas √† quarta aula da Imers√£o Java!

Agora vamos construir uma API REST para expor nosso pr√≥prio conte√∫do, utilizando ferramentas profissionais como o Spring Framework e um banco de dados NoSQL.



C√≥digo da Aula

<Clique aqui>[https://github.com/alura-cursos/imersao-java/tree/aula4] para acessar o c√≥digo da aula.



Links citados

    * <Documenta√ß√£o do Spring Framework>[https://spring.io/].
    * Link para <iniciar um projeto utilizando Spring>[https://start.spring.io/].
    * Link para <download do Maven>[https://maven.apache.org/download.cgi].
    * Link para <download do Postman>[https://www.postman.com/].
    * P√°gina para fazer o <registro e come√ßar a utilizar o MongoDb Atlas>[https://www.mongodb.com/cloud/atlas/register].
    * GitHub com os <logos das linguagens de programa√ß√£o>[https://github.com/abrahamcalf/programming-languages-logos].
    * Artigo sobre o <pack de stickers da Alura para Whatsapp e Telegram>[https://www.alura.com.br/artigos/stickers-dev-aluraverso-whatsapp-telegram].


Desafios

    1. Finalizar o CRUD (Create, Read, Update e Delete) para que se possa atualizar e excluir uma linguagem cadastrada;
    2. Devolver a listagem ordenada pelo ranking;
    3. Criar na sua API um modelo de entidade com nomes diferentes de title e image e criar seu pr√≥prio extrator de informa√ß√µes personalizado OU, manter com o nome title e image e traduzir para que seja retornado como t√≠tulo e imagem atrav√©s do uso de DTO (Data Transfer Object);
    4. Retornar o status 201 quando um recurso (linguagem, no nosso caso) for cadastrado atrav√©s do POST;
    5. Desafio supremo: Aplicar modifica√ß√µes parciais no recurso atrav√©s do m√©todo PATCH, por exemplo, modificando o n√∫mero de votos ou de pessoas que utilizam cada linguagem de programa√ß√£o.


Material complementar

   * Primeira aula do curso <‚ÄúMaven: gerenciamento de depend√™ncias e build de aplica√ß√µes Java‚Äù>[https://www.alura.com.br/conteudo/maven-gerenciamento-dependencias-build-aplicacoes-java] da Alura.
   * Alura+ <‚ÄúO que √© REST?‚Äù>[https://www.youtube.com/watch?v=weQ8ssA6iBU&ab_channel=AluraCursosOnline].
   * Artigo da Alura <‚ÄúConceito e fundamentos sobre REST‚Äù>[https://www.alura.com.br/artigos/rest-conceito-e-fundamentos].
   * Podcast <Hipsters.Tech sobre MongoDB>[https://www.hipsters.tech/mongodb-hipsters-ponto-tech-305/].
   * Hipters.Tube <‚ÄúO que √© SQL e NoSQL?‚Äù>[https://www.youtube.com/watch?v=aure5d3B88g&ab_channel=AluraCursosOnline].
   * Artigo da Alura <‚ÄúSpring: Conhe√ßa esse framework Java‚Äù>[https://www.alura.com.br/artigos/spring-conheca-esse-framework-java].
   * Alura+ <"Introdu√ß√£o ao Postman‚Äù>[https://www.youtube.com/watch?v=op81bMbgZXs&ab_channel=AluraCursosOnline].


Servi√ßos fora do ar?

A Imers√£o est√° t√£o grande que estamos derrubando algumas APIs... Mas n√£o se preocupe! Em nossa <comunidade no Discord>[https://discord.com/invite/XKt5CD5MDh] n√≥s colocaremos alternativas e resolu√ß√µes caso isso aconte√ßa. Al√©m disso, os alunos e alunas participando da Imers√£o tamb√©m est√£o criando solu√ß√µes para esses casos! √â a comunidade da Imers√£o Java vivenciando um ambiente real de desenvolvimento!


API da NASA üåå

Caso a API da NASA fique inst√°vel, use as seguintes URLs, que ter√£o os mesmos dados usados na aula:

   * (https://api.mocki.io/v2/549a5d8b/NASA-APOD)
   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/NASA-APOD.json)

Al√©m disso, deixamos uma URLs com imagens fant√°sticas do James Webb Space Telescope, como o primeiro deep field desse fant√°stico telesc√≥pio! TOPZERA! üå† ‚òÑÔ∏è üöÄ üõ∞Ô∏è üî≠ üåå

   * (https://api.mocki.io/v2/549a5d8b/NASA-APOD-JamesWebbSpaceTelescope)
   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/NASA-APOD-JamesWebbSpaceTelescope.json)


API do IMDB inst√°vel

Como a API do IMDB continua muito inst√°vel, vamos deixar algumas alternativas de API com um conte√∫do semelhante para voc√™s:

   * (https://api.mocki.io/v2/549a5d8b/Top250Movies)
   * (https://api.mocki.io/v2/549a5d8b/MostPopularMovies)
   * (https://api.mocki.io/v2/549a5d8b/MostPopularTVs)
   * (https://api.mocki.io/v2/549a5d8b/Top250TVs)

Segue tamb√©m uma solu√ß√£o inspirada na que foi criada ontem pelo instrutor Alex Felipe:

   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/TopMovies.json)
   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/MostPopularMovies.json)
   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/MostPopularTVs.json)
   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/TopTVs.json)

Para utilizar os endere√ßos alternativos, troque a URL da aula pelas novas URLs:

	// String url = "https://imdb-api.com/en/API/Top250Movies/k_0ojt0yvm";
	String url = "https://raw.githubusercontent.com/alura-cursos/imersao-java/api/TopMovies.json";


Divulgue seu projeto

Mostre seu projeto para o mundo compartilhando no LinkedIn e Instagram! Marque a Alura (@AluraOnline) e o Paulo (@paulo_hipster). Vamos adorar ver seus projetos e acompanhar sua evolu√ß√£o! Lembre-se de utilizar a hashtag #Imers√£oJava para seu projeto ter ainda mais alcance.

Ah, e n√£o esque√ßa de colocar a tag ImersaoJava dentro do seu projeto no GitHub. √â s√≥ clicar na engrenagem que aparece na se√ß√£o About e colocar a tag ImersaoJava dentro do campo Topics. Queremos ver seu portf√≥lio!


Discord

Participe do Discord para tirar suas d√∫vidas e conhecer outras pessoas que est√£o mergulhando em Java junto com voc√™! <Clique aqui>[https://discord.com/invite/XKt5CD5MDh] para entrar.

Bons estudos e at√© a pr√≥xima aula!
