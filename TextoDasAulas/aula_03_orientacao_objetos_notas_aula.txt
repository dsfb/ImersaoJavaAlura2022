
Aula 03 - Ligando as pontas, refatora√ß√£o e orienta√ß√£o a objetos


Links, dicas e notas de aula

Boas-vindas √† terceira aula da Imers√£o Java!

Chegou o momento de pegarmos os filmes do IMDb e gerar figurinhas com os p√¥steres, aproveitando para melhorar nosso c√≥digo com as refatora√ß√µes necess√°rias para torn√°-lo mais flex√≠vel e f√°cil de entender.


C√≥digo da Aula

<Clique aqui>[https://github.com/alura-cursos/imersao-java/tree/aula3] para acessar o c√≥digo da aula.


Links citados

   * Documenta√ß√£o das <APIs da NASA>[https://api.nasa.gov/].
   * API da <Foto Astron√¥mica do dia da NASA>[https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY].
   * Artigo na Alura <"Como n√£o aprender Java e Orienta√ß√£o a Objetos: getters e setters">[https://www.alura.com.br/artigos/nao-aprender-oo-getters-e-setters].
   * Livro <"Design Patterns">[https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612], de 1994, que descreve solu√ß√µes comuns para problemas recorrentes de como organizar seu c√≥digo.
   * Livro <"Refactoring">[https://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672], de 1999, que cataloga maneiras sistem√°ticas de melhorar o c√≥digo sem modificar o que √© feito.


Servi√ßos fora do ar?

A Imers√£o est√° t√£o grande que estamos derrubando algumas APIs... Mas n√£o se preocupe! Em nossa <comunidade no Discord>[https://discord.com/invite/XKt5CD5MDh] n√≥s colocaremos alternativas e resolu√ß√µes caso isso aconte√ßa. Al√©m disso, os alunos e alunas participando da Imers√£o tamb√©m est√£o criando solu√ß√µes para esses casos! √â a comunidade da Imers√£o Java vivenciando um ambiente real de desenvolvimento!


API da NASA üåå

Caso a API da NASA fique inst√°vel, use as seguintes URLs, que ter√£o os mesmos dados usados na aula:

   * (https://api.mocki.io/v2/549a5d8b/NASA-APOD)
   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/NASA-APOD.json)

Al√©m disso, deixamos uma URLs com imagens fant√°sticas do James Webb Space Telescope, como o primeiro deep field desse fant√°stico telesc√≥pio! TOPZERA! üå† ‚òÑÔ∏è üöÄ üõ∞Ô∏è üî≠ üåå

   * (https://api.mocki.io/v2/549a5d8b/NASA-APOD-JamesWebbSpaceTelescope)
   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/NASA-APOD-JamesWebbSpaceTelescope.json)


API do IMDB inst√°vel

Como a API do IMDB continua muito inst√°vel, vamos deixar algumas alternativas de API com um conte√∫do semelhante para voc√™s:

   * (https://api.mocki.io/v2/549a5d8b/Top250Movies)
   * (https://api.mocki.io/v2/549a5d8b/MostPopularMovies)
   * (https://api.mocki.io/v2/549a5d8b/MostPopularTVs)
   * (https://api.mocki.io/v2/549a5d8b/Top250TVs)

Segue tamb√©m uma solu√ß√£o inspirada na que foi criada ontem pelo instrutor Alex Felipe:

   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/TopMovies.json)
   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/MostPopularMovies.json)
   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/MostPopularTVs.json)
   * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/TopTVs.json)

Para utilizar os endere√ßos alternativos, troque a URL da aula pelas novas URLs:

	// String url = "https://imdb-api.com/en/API/Top250Movies/k_0ojt0yvm";
	String url = "https://raw.githubusercontent.com/alura-cursos/imersao-java/api/TopMovies.json";


Desafios

   1. Transformar a classe que representa os conte√∫dos em um Record, dispon√≠vel a partir do Java 16
   2. Criar as suas pr√≥prias exce√ß√µes e us√°-las na classe que implementa o cliente HTTP
   3. Usar recursos do Java 8 e posterior, como Streams e Lambdas, para mapear uma lista em uma outra
   4. Criar uma Enum que une, como configura√ß√µes, a URL da API e o extrator utilizado
   5. Desafio supremo: consumir outras APIs que cont√©m imagens, como a da Marvel, que √© bem diferente. Reposit√≥rio com APIs p√∫blicas: <clique aqui>[https://github.com/public-apis/public-apis].


Material complementar

   * Artigo na Alura <"Como n√£o aprender Java e Orienta√ß√£o a Objetos: heran√ßa">[https://www.alura.com.br/artigos/como-nao-aprender-orientacao-a-objetos-heranca].
   * Podcast Hipsters.tech sobre <Pr√°ticas de Orienta√ß√£o a Objetos>[]https://www.alura.com.br/podcast/praticas-de-orientacao-a-objetos-hipsters-129-a453.
   * Podcast Hipsters.tech sobre <Design Patterns>[https://www.alura.com.br/podcast/design-patterns-hipsters-206-a345].
   * Podcast Hipsters.tech sobre <SOLID>[https://www.alura.com.br/podcast/solid-codigo-bom-e-bonito-hipsters-ponto-tech-219-a649].


Divulgue seu projeto

Mostre seu projeto para o mundo compartilhando no LinkedIn e Instagram! Marque a Alura (@AluraOnline) e o Paulo (@paulo_hipster). Vamos adorar ver seus projetos e acompanhar sua evolu√ß√£o! Lembre-se de utilizar a hashtag #Imers√£oJava para seu projeto ter ainda mais alcance.


Discord

Participe do Discord para tirar suas d√∫vidas e conhecer outras pessoas que est√£o mergulhando em Java junto com voc√™! <Clique aqui>[https://discord.com/invite/XKt5CD5MDh] para entrar.

Ah, e n√£o esque√ßa de colocar a tag ImersaoJava dentro do seu projeto no GitHub. √â s√≥ clicar na engrenagem que aparece na se√ß√£o About e colocar a tag ImersaoJava dentro do campo Topics. Queremos ver seu portf√≥lio!
