
Aula 02 - Gerando figurinhas para WhatsApp


Links, dicas e notas de aula

Boas-vindas! Esta é a segunda aula da Imersão Java.

Nesta segunda aula vamos criar um gerador de figurinhas explorando outras bibliotecas nativas do Java, para que possamos enviar por Whatsapp os nossos filmes preferidos!



Código da Aula

<Clique aqui>[https://github.com/alura-cursos/imersao-java/tree/aula2] para acessar o código completo da aula.


Serviços

A Imersão está tão grande que estamos derrubando algumas APIs... Mas não se preocupe! Em nossa <comunidade no Discord>[https://discord.com/invite/XKt5CD5MDh] nós colocaremos alternativas e resoluções caso isso aconteça. Além disso, os alunos e alunas participando da Imersão também estão criando soluções para esses casos! É a comunidade da Imersão Java vivenciando um ambiente real de desenvolvimento!


API do IMDB instável

Seguem aqui também APIs alternativas!

Como a API do IMDB está muito instável, vamos deixar algumas alternativas de API com um conteúdo semelhante para vocês:

    * (https://api.mocki.io/v2/549a5d8b/Top250Movies)
    * (https://api.mocki.io/v2/549a5d8b/MostPopularMovies)
    * (https://api.mocki.io/v2/549a5d8b/MostPopularTVs)
    * (https://api.mocki.io/v2/549a5d8b/Top250TVs)

Segue também uma solução inspirada na que foi criada ontem pelo instrutor Alex Felipe:

    * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/TopMovies.json)
    * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/MostPopularMovies.json)
    * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/MostPopularTVs.json)
    * (https://raw.githubusercontent.com/alura-cursos/imersao-java/api/TopTVs.json)

Para utilizar os endereços alternativos, troque a URL da aula pelas novas URLs:

	// String url = "https://imdb-api.com/en/API/Top250Movies/k_0ojt0yvm";
	String url = "https://raw.githubusercontent.com/alura-cursos/imersao-java/api/TopMovies.json";


Links citados

    * Documentação do <pacote javax.imageio>[https://docs.oracle.com/en/java/javase/17/docs/api/java.desktop/javax/imageio/package-summary.html], que trata de leitura e escrita de imagens.

    * Documentação da <classe BufferedImage>[https://docs.oracle.com/en/java/javase/17/docs/api/java.desktop/java/awt/image/BufferedImage.html], que representa uma imagem no Java

    * Documentação da classe <Graphics2D>[https://docs.oracle.com/en/java/javase/17/docs/api/java.desktop/java/awt/Graphics2D.html], a “caneta” que permite escrever, desenhar e imprimir outras imagens em uma imagem original.

    * Documentação da <abstração InputStream>[https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/io/InputStream.html], que representa um fluxo de leitura de dados de qualquer fonte, como arquivos, URLs, entre outros.


Desafios

    1. Ler a documentação da classe abstrata InputStream.
    2. Centralizar o texto na figurinha.
    3. Fazer um pacote no Whatsapp e/ou Telegram com as suas próprias figurinhas!
    4. Criar diretório de saída das imagens, se ainda não existir.
    5. Colocar outra fonte como a Comic Sans ou a Impact, a fonte usada em memes.
    6. Colocar uma imagem de você que está fazendo esse curso sorrindo, fazendo joinha!
    7. Colocar contorno (outline) no texto da imagem.
    8. Tratar as imagens retornadas pela API do IMDB para pegar uma imagem maior ao invés dos thumbnails. Opções: pegar a URL da imagem e remover o trecho mostrado durante a aula ou consumir o endpoint de posters da API do IMDB (mais trabalhoso), tratando o JSON retornado.
    9. Fazer com que o texto da figurinha seja personalizado de acordo com as classificações do IMDB.
   10. Desafio supremo: usar alguma biblioteca de manipulação de imagens como OpenCV pra extrair imagem principal e contorná-la.


Material complementar

   * Primeira aula do curso <“Java Polimorfismo: entenda herança e interfaces”>[https://www.alura.com.br/conteudo/java-heranca-interfaces-polimorfismo] da Alura.
   * Apêndice da apostila <“Java e Orientação a Objetos”>[https://www.alura.com.br/apostila-java-orientacao-objetos/apendice-pacote-java-io] da Alura sobre o pacote java.io que explica com mais detalhes a abstração InputStream.


Divulgue seu projeto

Mostre seu projeto para o mundo compartilhando no LinkedIn e Instagram! Marque a Alura (@AluraOnline) e o Paulo (@paulo_hipster). Vamos adorar ver seus projetos e acompanhar sua evolução! Lembre-se de utilizar a hashtag #ImersãoJava para seu projeto ter ainda mais alcance.

Ah, e não esqueça de colocar a tag ImersaoJava dentro do seu projeto no GitHub. É só clicar na engrenagem que aparece na seção About e colocar a tag ImersaoJava dentro do campo Topics. Queremos ver seu portfólio!


Discord

Participe do Discord para tirar suas dúvidas e conhecer outras pessoas que estão mergulhando em Java junto com você! <Clique aqui>[https://discord.com/invite/XKt5CD5MDh] para entrar.

Bons estudos e até a próxima aula!
